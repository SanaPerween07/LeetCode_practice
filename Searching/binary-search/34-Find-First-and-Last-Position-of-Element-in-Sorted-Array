class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        result[0] = finda(nums, target);
        result[1] = findb(nums, target);
        return result;
    }

    private int finda(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;
        int a = -1;

        while(low <= high){
            int mid = (low + high) / 2;

            if(target == nums[mid]){
                a = mid;
                high = mid - 1;
            }
            else if(target > nums[mid] && target <= nums[high]){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return a;
    }

    private int findb(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;
        int b = -1;

        while(low <= high){
            int mid = (low + high) / 2;

            if(target == nums[mid]){
                b = mid;
                low = mid + 1;
            }
            else if(target > nums[mid] && target <= nums[high]){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return b;
    }
}